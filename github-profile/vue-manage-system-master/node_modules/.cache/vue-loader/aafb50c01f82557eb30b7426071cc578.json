{"remainingRequest":"/Users/bm/github-profile/vue-manage-system-master/node_modules/_vue-loader@15.8.3@vue-loader/lib/index.js??vue-loader-options!/Users/bm/github-profile/vue-manage-system-master/src/components/page/Tabs.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/bm/github-profile/vue-manage-system-master/src/components/page/Tabs.vue","mtime":1579601784425},{"path":"/Users/bm/github-profile/vue-manage-system-master/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":1579166323930},{"path":"/Users/bm/github-profile/vue-manage-system-master/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js","mtime":1579166323365},{"path":"/Users/bm/github-profile/vue-manage-system-master/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":1579166323930},{"path":"/Users/bm/github-profile/vue-manage-system-master/node_modules/_vue-loader@15.8.3@vue-loader/lib/index.js","mtime":1579166331242}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Tabs from './Tabs.js'\nexport default {\n    name: 'tabs',\n    data() {\n        return {\n            message: 'first',\n            showHeader: false,\n            unread: [],\n            read: [],\n            recycle: []\n        }\n    },\n    mounted () {\n        this.queryLIst()\n    },\n    activated(){\n        this.queryLIst()\n    },\n    methods: {\n       async queryLIst(){\n          let datas= await Tabs.queryMessage()\n          this.unread=datas.unread;\n          this.read=datas.read;\n          this.recycle=datas.recycle;\n        },\n        handerTime(time){\n            time=new Date(time).getTime()\n            return time;\n        },\n       async handleRead(index) {\n           await Tabs.PutMessage({id:this.unread[index].id,read:1})\n            const item = this.unread.splice(index, 1);\n            this.read = item.concat(this.read);\n        },\n       async handleDel(index) {\n            await Tabs.PutMessage({id:this.read[index].id,recycle:1})\n            const item = this.read.splice(index, 1);\n            this.recycle = item.concat(this.recycle);\n        },\n       async handleRestore(index) {\n             await Tabs.PutMessage({id:this.recycle[index].id,recycle:-1})\n            const item = this.recycle.splice(index, 1);\n            this.read = item.concat(this.read);\n        }\n    },\n    computed: {\n        unreadNum(){\n            return this.unread.length;\n        }\n    }\n}\n\n",{"version":3,"sources":["Tabs.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Tabs.vue","sourceRoot":"src/components/page","sourcesContent":["<template>\r\n    <div class=\"\">\r\n        <div class=\"crumbs\">\r\n            <el-breadcrumb separator=\"/\">\r\n                <el-breadcrumb-item><i class=\"el-icon-lx-copy\"></i> tab选项卡</el-breadcrumb-item>\r\n            </el-breadcrumb>\r\n        </div>\r\n        <div class=\"container\">\r\n            <el-tabs v-model=\"message\">\r\n                <el-tab-pane :label=\"`未读消息(${unread.length})`\" name=\"first\">\r\n                    <el-table :data=\"unread\" :show-header=\"false\" style=\"width: 100%\">\r\n                        <el-table-column>\r\n                            <template slot-scope=\"scope\">\r\n                                <span class=\"message-title\">{{scope.row.content}}</span>\r\n                            </template>\r\n                        </el-table-column>\r\n                        <el-table-column width=\"180\">\r\n                              <template slot-scope=\"scope\">\r\n                             {{$common.formatDate(scope.row.created_at)}}\r\n                             </template>\r\n                        </el-table-column>\r\n                        <el-table-column width=\"120\">\r\n                            <template slot-scope=\"scope\">\r\n                                <el-button size=\"small\" @click=\"handleRead(scope.$index)\">标为已读</el-button>\r\n                            </template>\r\n                        </el-table-column>\r\n                    </el-table>\r\n                    <div class=\"handle-row\">\r\n                        <el-button type=\"primary\">全部标为已读</el-button>\r\n                    </div>\r\n                </el-tab-pane>\r\n                <el-tab-pane :label=\"`已读消息(${read.length})`\" name=\"second\">\r\n                    <template v-if=\"message === 'second'\">\r\n                        <el-table :data=\"read\" :show-header=\"false\" style=\"width: 100%\">\r\n                            <el-table-column>\r\n                                <template slot-scope=\"scope\">\r\n                                    <span class=\"message-title\">{{scope.row.content}}</span>\r\n                                </template>\r\n                            </el-table-column>\r\n                            <el-table-column  width=\"150\">\r\n                                    <template slot-scope=\"scope\">\r\n                                {{$common.formatDate(scope.row.created_at)}}\r\n                                 </template>\r\n                            </el-table-column>\r\n                            <el-table-column width=\"120\">\r\n                                <template slot-scope=\"scope\">\r\n                                    <el-button type=\"danger\" @click=\"handleDel(scope.$index)\">删除</el-button>\r\n                                </template>\r\n                            </el-table-column>\r\n                        </el-table>\r\n                        <div class=\"handle-row\">\r\n                            <el-button type=\"danger\">删除全部</el-button>\r\n                        </div>\r\n                    </template>\r\n                </el-tab-pane>\r\n                <el-tab-pane :label=\"`回收站(${recycle.length})`\" name=\"third\">\r\n                    <template v-if=\"message === 'third'\">\r\n                        <el-table :data=\"recycle\" :show-header=\"false\" style=\"width: 100%\">\r\n                            <el-table-column>\r\n                                <template slot-scope=\"scope\">\r\n                                    <span class=\"message-title\">{{scope.row.content}}</span>\r\n                                </template>\r\n                            </el-table-column>\r\n                            <el-table-column  width=\"150\">\r\n                                   <template slot-scope=\"scope\">\r\n                                {{$common.formatDate(scope.row.created_at)}}\r\n                                 </template>\r\n                            </el-table-column>\r\n                            <el-table-column width=\"120\">\r\n                                <template slot-scope=\"scope\">\r\n                                    <el-button @click=\"handleRestore(scope.$index)\">还原</el-button>\r\n                                </template>\r\n                            </el-table-column>\r\n                        </el-table>\r\n                        <div class=\"handle-row\">\r\n                            <el-button type=\"danger\">清空回收站</el-button>\r\n                        </div>\r\n                    </template>\r\n                </el-tab-pane>\r\n            </el-tabs>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import Tabs from './Tabs.js'\r\n    export default {\r\n        name: 'tabs',\r\n        data() {\r\n            return {\r\n                message: 'first',\r\n                showHeader: false,\r\n                unread: [],\r\n                read: [],\r\n                recycle: []\r\n            }\r\n        },\r\n        mounted () {\r\n            this.queryLIst()\r\n        },\r\n        activated(){\r\n            this.queryLIst()\r\n        },\r\n        methods: {\r\n           async queryLIst(){\r\n              let datas= await Tabs.queryMessage()\r\n              this.unread=datas.unread;\r\n              this.read=datas.read;\r\n              this.recycle=datas.recycle;\r\n            },\r\n            handerTime(time){\r\n                time=new Date(time).getTime()\r\n                return time;\r\n            },\r\n           async handleRead(index) {\r\n               await Tabs.PutMessage({id:this.unread[index].id,read:1})\r\n                const item = this.unread.splice(index, 1);\r\n                this.read = item.concat(this.read);\r\n            },\r\n           async handleDel(index) {\r\n                await Tabs.PutMessage({id:this.read[index].id,recycle:1})\r\n                const item = this.read.splice(index, 1);\r\n                this.recycle = item.concat(this.recycle);\r\n            },\r\n           async handleRestore(index) {\r\n                 await Tabs.PutMessage({id:this.recycle[index].id,recycle:-1})\r\n                const item = this.recycle.splice(index, 1);\r\n                this.read = item.concat(this.read);\r\n            }\r\n        },\r\n        computed: {\r\n            unreadNum(){\r\n                return this.unread.length;\r\n            }\r\n        }\r\n    }\r\n\r\n</script>\r\n\r\n<style>\r\n.message-title{\r\n    cursor: pointer;\r\n}\r\n.handle-row{\r\n    margin-top: 30px;\r\n}\r\n</style>\r\n\r\n"]}]}