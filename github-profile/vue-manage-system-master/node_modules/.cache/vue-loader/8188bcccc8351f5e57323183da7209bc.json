{"remainingRequest":"/Users/bm/github-profile/vue-manage-system-master/node_modules/_vue-loader@15.8.3@vue-loader/lib/index.js??vue-loader-options!/Users/bm/github-profile/vue-manage-system-master/src/components/page/article.vue?vue&type=style&index=0&id=4b9fdaf4&scoped=true&lang=css&","dependencies":[{"path":"/Users/bm/github-profile/vue-manage-system-master/src/components/page/article.vue","mtime":1579592792065},{"path":"/Users/bm/github-profile/vue-manage-system-master/node_modules/_css-loader@1.0.1@css-loader/index.js","mtime":1579166325400},{"path":"/Users/bm/github-profile/vue-manage-system-master/node_modules/_vue-loader@15.8.3@vue-loader/lib/loaders/stylePostLoader.js","mtime":1579166331242},{"path":"/Users/bm/github-profile/vue-manage-system-master/node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js","mtime":1579166329752},{"path":"/Users/bm/github-profile/vue-manage-system-master/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":1579166323930},{"path":"/Users/bm/github-profile/vue-manage-system-master/node_modules/_vue-loader@15.8.3@vue-loader/lib/index.js","mtime":1579166331242}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.handle-box {\n    margin-bottom: 20px;\n}\n\n.handle-select {\n    width: 120px;\n}\n\n.handle-input {\n    width: 300px;\n    display: inline-block;\n}\n.table {\n    width: 100%;\n    font-size: 14px;\n}\n.red {\n    color: #ff0000;\n}\n.mr10 {\n    margin-right: 10px;\n}\n\n.table-td-thumb {\n    display: block;\n    margin: auto;\n    width: 40px;\n    height: 40px;\n}\n",{"version":3,"sources":["article.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsPA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"article.vue","sourceRoot":"src/components/page","sourcesContent":["<template>\n    <div>\n        <div class=\"crumbs\">\n            <el-breadcrumb separator=\"/\">\n                <el-breadcrumb-item>\n                    <i class=\"el-icon-lx-cascades\"></i> 基础表格\n                </el-breadcrumb-item>\n            </el-breadcrumb>\n        </div>\n        <div class=\"container\">\n            <div class=\"handle-box\">\n                <el-button\n                    type=\"primary\"\n                    icon=\"el-icon-delete\"\n                    class=\"handle-del mr10\"\n                    @click=\"delAllSelection\"\n                >批量删除</el-button>\n                 <el-input v-model=\"query.title\" placeholder=\"请输入文章标题\" class=\"handle-input mr10\"></el-input>\n                    <el-autocomplete\n                    v-model=\"query.category\"\n                    :fetch-suggestions=\"querySearch\"\n                    placeholder=\"请输入文章分类\"\n                    valueKey=\"name\"\n                    @select=\"handleSelect\"\n                 ></el-autocomplete>\n               \n                <el-button type=\"primary\" icon=\"el-icon-search\" @click=\"handleSearch\">搜索</el-button>\n                <el-button @click=\"$router.push('/article-add')\"> 添加文章 </el-button>\n            </div>\n            <el-table\n                :data=\"tableData\"\n                border\n                class=\"table\"\n                ref=\"multipleTable\"\n                header-cell-class-name=\"table-header\"\n                @selection-change=\"handleSelectionChange\"\n            >\n               <el-table-column type=\"selection\" width=\"55\" align=\"center\"></el-table-column>\n                 <el-table-column  prop=\"id\" label=\"ID\" width=\"55\" align=\"center\"></el-table-column>\n                 <el-table-column  prop=\"title\" label=\"文章标题\" align=\"center\"></el-table-column>\n                 <el-table-column  prop=\"category\" label=\"文章分类\" align=\"center\"></el-table-column>\n            \n              <!--    <el-table-column prop=\"id\" label=\"ID\" width=\"55\" align=\"center\"></el-table-column>\n                <el-table-column prop=\"name\" label=\"用户名\"></el-table-column>\n                <el-table-column label=\"账户余额\">\n                    <template slot-scope=\"scope\">￥{{scope.row.money}}</template>\n                </el-table-column>\n                <el-table-column label=\"头像(查看大图)\" align=\"center\">\n                    <template slot-scope=\"scope\">\n                        <el-image\n                            class=\"table-td-thumb\"\n                            :src=\"scope.row.thumb\"\n                            :preview-src-list=\"[scope.row.thumb]\"\n                        ></el-image>\n                    </template>\n                </el-table-column>\n                <el-table-column prop=\"address\" label=\"地址\"></el-table-column>\n                <el-table-column label=\"状态\" align=\"center\">\n                    <template slot-scope=\"scope\">\n                        <el-tag\n                            :type=\"scope.row.state==='成功'?'success':(scope.row.state==='失败'?'danger':'')\"\n                        >{{scope.row.state}}</el-tag>\n                    </template>\n                </el-table-column>\n\n                <el-table-column prop=\"date\" label=\"注册时间\"></el-table-column>-->\n                <el-table-column label=\"操作\" width=\"280\" align=\"center\">\n                    <template slot-scope=\"scope\">\n                        <el-button\n                            type=\"text\"\n                            icon=\"el-icon-edit\"\n                            @click=\"handleEdit(scope.$index, scope.row)\"\n                        >编辑</el-button>\n                        <el-button\n                            type=\"text\"\n                            icon=\"el-icon-delete\"\n                            class=\"red\"\n                            @click=\"handleDelete(scope.$index, scope.row)\"\n                        >删除</el-button>\n                          <el-button\n                            type=\"text\"\n                            icon=\"el-icon-edit\"\n                            @click=\"handleComment(scope.$index, scope.row)\"\n                        >测试评论</el-button>\n                    </template>\n                </el-table-column> \n            </el-table>\n            <div class=\"pagination\">\n                <el-pagination\n                    background\n                    layout=\"total, prev, pager, next\"\n                    :current-page=\"query.pageIndex\"\n                    :page-size=\"query.pageSize\"\n                    :total=\"pageTotal\"\n                    @current-change=\"handlePageChange\"\n                ></el-pagination>\n            </div>\n        </div>\n\n        <!-- 编辑弹出框 -->\n        <el-dialog title=\"编辑\" :visible.sync=\"editVisible\" width=\"30%\">\n            <el-form ref=\"form\" :model=\"form\" label-width=\"70px\">\n                <el-form-item label=\"用户名\">\n                    <el-input v-model=\"form.name\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"评论内容\">\n                    <el-input v-model=\"form.address\"></el-input>\n                </el-form-item>\n            </el-form>\n            <span slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"editVisible = false\">取 消</el-button>\n                <el-button type=\"primary\" @click=\"saveEdit\">确 定</el-button>\n            </span>\n        </el-dialog>\n    </div>\n</template>\n\n<script>\nimport { fetchData } from '../../api/index';\nimport article from './article'\nexport default {\n    name: 'basetable',\n    data() {\n        return {\n            query: {\n                title:'',\n                name: '',\n                pageIndex: 1,\n                pageSize: 10\n            },\n            tableData: [],\n            multipleSelection: [],\n            delList: [],\n            editVisible: false,\n            pageTotal: 0,\n            form: {},\n            idx: -1,\n            id: -1\n        };\n    },\n    created() {\n        this.getData();\n        this.getCategoryDate()\n    },\n    activated(){\n       this.getData();\n       this.getCategoryDate()\n    },\n    methods: {\n        // 获取 easy-mock 的模拟数据\n        async getData() {\n         let query={};\n         Object.assign(query,this.query)\n         let datas=await article.queryList(query)\n         this.tableData=datas.datas.rows;\n         this.pageTotal=datas.datas.count;\n        },\n       async getCategoryDate(){\n            let datas=await article.queryCategoryList();\n            this.restaurants=datas.datas;\n       },\n     querySearch(queryString, cb) {\n\n        var restaurants = this.restaurants;\n        var results = queryString ? restaurants.filter(this.createFilter(queryString)) : restaurants;\n        // 调用 callback 返回建议列表的数据\n        cb(results);\n      },\n      createFilter(queryString) {\n        return (restaurant) => {\n          return (restaurant.name.toLowerCase().indexOf(queryString.toLowerCase()) !=-1);\n        };\n      },\n        handleSelect(item){\n              this.getData();\n        },\n        // 触发搜索按钮\n        handleSearch() {\n            this.$set(this.query, 'pageIndex', 1);\n            this.getData();\n        },\n\n        // 删除操作\n        handleDelete(index, row) {\n            // 二次确认删除\n            this.$confirm('确定要删除吗？', '提示', {\n                type: 'warning'\n            })\n                .then(async () => {\n                    await article.del(row.id)\n                      this.getData();\n                    // this.$message.success('删除成功');\n                    // this.tableData.splice(index, 1);\n                })\n                .catch(() => {});\n        },\n       async handleComment(index,row){\n            try{\n             let prompt= await  this.$prompt('请输入评论内容', '提示',)\n             let param={};\n             param['content']=prompt.value;\n             param['articleId']=  this.tableData[index].id;\n            \n            let datas= await  article.postComment(param)\n            }catch(err){\n\n            }\n        },\n        // 多选操作\n        handleSelectionChange(val) {\n            this.multipleSelection = val;\n        },\n        delAllSelection() {\n            const length = this.multipleSelection.length;\n            let str = '';\n            this.delList = this.delList.concat(this.multipleSelection);\n            for (let i = 0; i < length; i++) {\n                str += this.multipleSelection[i].name + ' ';\n            }\n            this.$message.error(`删除了${str}`);\n            this.multipleSelection = [];\n        },\n        // 编辑操作\n        handleEdit(index, row) {\n          //  this.idx = index;\n        //    this.form = row;\n\n        //  this.editVisible = true;\n            this.$router.push({path:'/article-edit',query:{id:row.id}})\n        },\n        // 保存编辑\n        saveEdit() {\n            this.editVisible = false;\n            // this.$message.success(`修改第 ${this.idx + 1} 行成功`);\n            this.$set(this.tableData, this.idx, this.form);\n        },\n        // 分页导航\n        handlePageChange(val) {\n            this.$set(this.query, 'pageIndex', val);\n            this.getData();\n        }\n    }\n};\n</script>\n\n<style scoped>\n.handle-box {\n    margin-bottom: 20px;\n}\n\n.handle-select {\n    width: 120px;\n}\n\n.handle-input {\n    width: 300px;\n    display: inline-block;\n}\n.table {\n    width: 100%;\n    font-size: 14px;\n}\n.red {\n    color: #ff0000;\n}\n.mr10 {\n    margin-right: 10px;\n}\n\n.table-td-thumb {\n    display: block;\n    margin: auto;\n    width: 40px;\n    height: 40px;\n}\n</style>\n"]}]}