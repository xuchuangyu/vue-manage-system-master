{"remainingRequest":"/Users/bm/github-profile/vue-manage-system-master/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js!/Users/bm/github-profile/vue-manage-system-master/src/utils/request.js","dependencies":[{"path":"/Users/bm/github-profile/vue-manage-system-master/src/utils/request.js","mtime":1579231078939},{"path":"/Users/bm/github-profile/vue-manage-system-master/node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js","mtime":1579166323930},{"path":"/Users/bm/github-profile/vue-manage-system-master/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js","mtime":1579166323365}],"contextDependencies":[],"result":["import axios from 'axios';\nvar service = axios.create({\n  // process.env.NODE_ENV === 'development' 来判断是否开发环境\n  // easy-mock服务挂了，暂时不使用了\n  // baseURL: 'https://www.easy-mock.com/mock/592501a391470c0ac1fab128',\n  timeout: 5000\n});\nservice.interceptors.request.use(function (config) {\n  console.log('config');\n  console.log(config);\n  return config;\n}, function (error) {\n  console.log(error);\n  return Promise.reject();\n});\nservice.interceptors.response.use(function (response) {\n  console.log('response');\n  console.log(response);\n\n  if (response.status === 200) {\n    return response.data;\n  } else {\n    Promise.reject();\n  }\n}, function (error) {\n  if (error.response) {\n    // The request was made and the server responded with a status code\n    // that falls out of the range of 2xx\n    console.log(error.response.data);\n    console.log(error.response.status);\n    console.log(error.response.headers);\n  } else if (error.request) {\n    // The request was made but no response was received\n    // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n    // http.ClientRequest in node.js\n    console.log(error.request);\n  } else {\n    // Something happened in setting up the request that triggered an Error\n    console.log('Error', error.message);\n  }\n\n  console.log(error.config);\n  return Promise.reject();\n});\nexport default service;",{"version":3,"sources":["/Users/bm/github-profile/vue-manage-system-master/src/utils/request.js"],"names":["axios","service","create","timeout","interceptors","request","use","config","console","log","error","Promise","reject","response","status","data","headers","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,OAAO,GAAGD,KAAK,CAACE,MAAN,CAAa;AACzB;AACA;AACA;AACAC,EAAAA,OAAO,EAAE;AAJgB,CAAb,CAAhB;AAOAF,OAAO,CAACG,YAAR,CAAqBC,OAArB,CAA6BC,GAA7B,CACI,UAAAC,MAAM,EAAI;AACNC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,SAAOA,MAAP;AACH,CALL,EAMI,UAAAG,KAAK,EAAI;AACLF,EAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACA,SAAOC,OAAO,CAACC,MAAR,EAAP;AACH,CATL;AAYAX,OAAO,CAACG,YAAR,CAAqBS,QAArB,CAA8BP,GAA9B,CACI,UAAAO,QAAQ,EAAI;AACRL,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYI,QAAZ;;AAEA,MAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AACzB,WAAOD,QAAQ,CAACE,IAAhB;AACH,GAFD,MAEO;AACHJ,IAAAA,OAAO,CAACC,MAAR;AACH;AAEJ,CAXL,EAYI,UAAAF,KAAK,EAAI;AACL,MAAIA,KAAK,CAACG,QAAV,EAAoB;AAChB;AACA;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAK,CAACG,QAAN,CAAeE,IAA3B;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAK,CAACG,QAAN,CAAeC,MAA3B;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAK,CAACG,QAAN,CAAeG,OAA3B;AACD,GANH,MAMS,IAAIN,KAAK,CAACL,OAAV,EAAmB;AACxB;AACA;AACA;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAK,CAACL,OAAlB;AACD,GALM,MAKA;AACL;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBC,KAAK,CAACO,OAA3B;AACD;;AACDT,EAAAA,OAAO,CAACC,GAAR,CAAYC,KAAK,CAACH,MAAlB;AACF,SAAOI,OAAO,CAACC,MAAR,EAAP;AACH,CA9BL;AAiCA,eAAeX,OAAf","sourcesContent":["import axios from 'axios';\n\nconst service = axios.create({\n    // process.env.NODE_ENV === 'development' 来判断是否开发环境\n    // easy-mock服务挂了，暂时不使用了\n    // baseURL: 'https://www.easy-mock.com/mock/592501a391470c0ac1fab128',\n    timeout: 5000\n});\n\nservice.interceptors.request.use(\n    config => {\n        console.log('config')\n        console.log(config)\n        return config;\n    },\n    error => {\n        console.log(error);\n        return Promise.reject();\n    }\n);\n\nservice.interceptors.response.use(\n    response => {\n        console.log('response')\n        console.log(response)\n    \n        if (response.status === 200) {\n            return response.data;\n        } else {\n            Promise.reject();\n        }\n      \n    },\n    error => {\n        if (error.response) {\n            // The request was made and the server responded with a status code\n            // that falls out of the range of 2xx\n            console.log(error.response.data);\n            console.log(error.response.status);\n            console.log(error.response.headers);\n          } else if (error.request) {\n            // The request was made but no response was received\n            // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n            // http.ClientRequest in node.js\n            console.log(error.request);\n          } else {\n            // Something happened in setting up the request that triggered an Error\n            console.log('Error', error.message);\n          }\n          console.log(error.config);\n        return Promise.reject();\n    }\n);\n\nexport default service;\n"]}]}